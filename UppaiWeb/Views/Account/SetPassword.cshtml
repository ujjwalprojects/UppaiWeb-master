@model UppaiWeb.Models.SetPasswordManageModel
@{
    ViewBag.Title = "Set Password";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
@*<link href="~/Content/AdminStyle/LoginPage.css" rel="stylesheet" />*@
<div class="row justify-content-center" style="margin-top:90px!important">
    <div class="container h-100">
        <div class="d-flex justify-content-center h-100">
            <div class="Login_card">
                <div class="d-flex justify-content-center">
                    <div class="brand_logo_container">
                        <img src="~/Content/Image/logo.png" class="brand_logo" alt="Logo">
                    </div>
                </div>

                <div class="d-flex justify-content-center form_container-mt">
                    <form class="user" method="post" action="/account/SetPassword">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.Hidden("SetPassword.UserID", Model.UserProfile.Id)
                        @Html.HiddenFor(m => m.Code)
                        <div class="form-group">
                            <h4>@Model.UserProfile.ProfileName</h4>
                            <p>
                                Account Activation Successful<br />
                                <small>(Set New Password)</small>
                            </p>
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="fas fa-key"></i></span>
                                </div>
                                @Html.PasswordFor(m => m.SetPassword.NewPassword, new { @class = "form-control  form-control-user", autocomplete = "off", @placeholder = "New Password" })
                            </div>
                            @Html.ValidationMessageFor(m => m.SetPassword.NewPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="fas fa-key"></i></span>
                                </div>
                                @Html.PasswordFor(m => m.SetPassword.ConfirmPassword, new { @class = "form-control form-control-user", @placeholder = "Password", @id = "Confirm Password" })
                            </div>
                            @Html.ValidationMessageFor(m => m.SetPassword.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="d-flex justify-content-center login_container">
                            <button class="btn login_btn" type="submit">Set Password</button>
                        </div>
                    </form>
                </div>

                <div class="mt-4">
                    <div class="pull-left">
                        <a href="/account/Login">Back To Login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
