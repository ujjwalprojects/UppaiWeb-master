@model UppaiWeb.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-title-wrapper">
    <div class="page-title-heading">
        <div class="page-title-icon">
            <i class="fas fa-fw fa-hand-point-right"></i>
        </div>
        <div>
            <div class="page-title-main-text linebreak">
                My Profile
            </div>
        </div>
    </div>
    @*<div class="page-title-actions mt-3"> <a href="/partner/register/index" class="btn btn-danger"> <i class="fa fa-th-list"></i> Partner List</a></div>*@
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-info"><i class="fas fa-fw fa-user"></i> My Profile <small class="text-secondary text-sm-left"><i class="fas fa-fw fa-caret-right"></i>Change Password</small></h6>
    </div>
    <div class="card-body pb-4">
        @using (Html.BeginForm("changepassword", "account", new { @area = "" }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="col-md-12 mb-3">
                <i>Please note all fields marked as <strong class="text-danger">*</strong> are mandatory fields.</i>
            </div>
            <div class="col-md-12">
                <div class="row">
                    <div class="form-group col-md-12">
                        <label class="control-label required">Old Password</label>
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Old Password" })
                        @Html.ValidationMessageFor(m => m.OldPassword)
                    </div>
                    <div class="form-group col-md-12">
                        <label class="control-label required">New Password</label>
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter New Password" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </div>

                    <div class="form-group col-md-12">
                        <label class="control-label required">ConfirmPassword</label>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Confirm Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
            </div>
            <hr />
            <div class="action-div action-style">
                <a href="/user/dashboard" class="btn btn-secondary btn-user">Back To Dashboard</a>
                <button type="submit" class="btn btn-success btn-user float-right"><i class="fa fa-save"></i> Save</button>
                <div class="clearfix"></div>
            </div>
        }
    </div>
</div>

@*error message*@
<div id="ErrMsg" style="display:none;">
    <input type="hidden" id="ErrMsgHiddenField" name="ErrMsg" value="@TempData["ErrMsg"]" />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<div class="card">
    <div class="card-body pb-4">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <form method="post" action="/account/changepassword" id="passForm">
                    @Html.AntiForgeryToken()
                    <h4 class="text-center">Change Password</h4>
                    @Html.ValidationSummary(true)

                    <div class="form-group">
                        @Html.LabelFor(m => m.OldPassword, new { @class = "control-label required" })
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @id = "OldPass" })
                        @Html.ValidationMessageFor(m => m.OldPassword)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "control-label required" })
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @id = "NewPass" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label required" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @id = "ConfirmPass" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" id="LogIn">
                            Change Password
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>*@
