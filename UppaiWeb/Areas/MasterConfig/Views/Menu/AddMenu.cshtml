@model UppaiWeb.Areas.MasterConfig.Models.MenuAdd
@{
    ViewBag.Title = "Menu Management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    List<string> menutype = new List<string>() { "Veg Menu", "Non-Veg Menu", "Not Applicable" };
}
<link href="~/Content/cropper/cropper.min.css" rel="stylesheet" />
<div class="page-title-wrapper">
    <div class="page-title-heading">
        <div class="page-title-icon">
            <i class="fas fa-fw fa-hand-point-right"></i>
        </div>
        <div>
            <div class="page-title-main-text linebreak">
                Menu Management
            </div>
        </div>
    </div>
    <div class="page-title-actions mt-3"> <a href="/masterconfig/menu/menulist" class="btn btn-danger"> <i class="fa fa-th-list"></i> Menu List</a></div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-info"><i class="fas fa-fw fa-file-alt"></i> Menu Management <small class="text-secondary text-sm-left"><i class="fas fa-fw fa-caret-right"></i> Add Menu</small></h6>
    </div>
    <div class="card-body pb-4">
        @using (Html.BeginForm("AddMenu", "menu", new { @area = "masterconfig" }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="col-md-12 mb-3">
                <i>Please note all fields marked as <strong class="text-danger">*</strong> are mandatory fields.</i>
            </div>
            <div class="">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-9 p-0">
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="form-group col-md-12">
                                    <label class="control-label required">Menu Added For</label>
                                    @Html.DropDownListFor(m => m.AddMenu.AddedBy, new SelectList(Model.PartnerDDList, "UserName", "PartnerName"), "----Select Partner----", new { @class = "form-control", @placeholder = "Select Partner" })
                                    @Html.ValidationMessageFor(m => m.AddMenu.AddedBy)
                                </div>
                            }
                            <div class="form-group col-md-12">
                                <label class="control-label required">Menu Name</label>
                                @Html.TextBoxFor(m => m.AddMenu.MenuName, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Menu Name" })
                                @Html.ValidationMessageFor(m => m.AddMenu.MenuName)
                            </div>
                            <div class="form-group col-md-12">
                                <label class="control-label required">Category Name</label>
                                @Html.DropDownListFor(m => m.AddMenu.ItemCategoryID, new SelectList(Model.MenuCategoryDDList, "ItemCategoryID", "ItemCategoryName"), "----Select Menu Category----", new { @class = "form-control", @placeholder = "Select Menu Category" })
                                @Html.ValidationMessageFor(m => m.AddMenu.ItemCategoryID)
                            </div>
                        </div>
                        <div class="col-md-3 text-center p-0">
                            <div id="imgPhotoThumb" style="margin-left: auto; margin-right: auto;">
                                <img src="~/Content/Image/no-thumb.png" alt="Change Photo" class="rounded-circle img-thumbnail" style="width: 140px; height: 140px; vertical-align: middle" />
                            </div>
                            <div style="width: 100%; margin-top: 10px;">
                                <button type="button" style="width:150px;" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#photo-modal">
                                    Upload Photo
                                </button>
                            </div>
                            @Html.TextAreaFor(m => m.AddMenu.ImageThumbnail, new { @class = "d-none", @id = "profilePhotoThumb" })
                            @Html.TextAreaFor(m => m.AddMenu.ImageNormal, new { @class = "d-none", @id = "profilePhotoNormal" })
                            @Html.ValidationMessage("MenuImages")
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label class="control-label required">Menu Type</label>
                            @Html.DropDownListFor(m => m.AddMenu.MenuType, new SelectList(menutype), "----Select Menu Type----", new { @class = "form-control", @placeholder = "Select Menu Type" })
                            @Html.ValidationMessageFor(m => m.AddMenu.MenuType)
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label required">Original Price</label>
                            @Html.TextBoxFor(m => m.AddMenu.OrginalPrice, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Menu Price" })
                            @Html.ValidationMessageFor(m => m.AddMenu.OrginalPrice)
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label">Discount Price</label>
                            @Html.TextBoxFor(m => m.AddMenu.DiscountPrice, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Discount Price" })
                            @Html.ValidationMessageFor(m => m.AddMenu.DiscountPrice)
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label">Served Upto</label>
                            @Html.TextBoxFor(m => m.AddMenu.ServedUpto, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Quantity" })
                            @Html.ValidationMessageFor(m => m.AddMenu.ServedUpto)
                        </div>
                        <div class="form-group col-md-12">
                            <label class="control-label">Description</label>
                            @Html.TextAreaFor(m => m.AddMenu.Description, new { @class = "form-control", @autocomplete = "off", @placeholder = "Enter Description" })
                            @Html.ValidationMessageFor(m => m.AddMenu.Description)
                        </div>
                        <div class="form-group col-md-12">
                            @Html.CheckBoxFor(m => m.AddMenu.IsAvailable, new { id = "chkpublish" }) Please Uncheck, If Menu is not Available.
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="action-div action-style">
                <a href="/masterconfig/menu/menulist" class="btn btn-secondary btn-user">Back To List</a>
                <button type="submit" class="btn btn-success btn-user float-right"><i class="fa fa-save"></i> Save</button>
                <div class="clearfix"></div>
            </div>
        }
    </div>
</div>

@*error message*@
<div id="ErrMsg" style="display:none;">
    <input type="hidden" id="ErrMsgHiddenField" name="ErrMsg" value="@TempData["ErrMsg"]" />
</div>
<div class="modal fade" id="photo-modal" aria-hidden="true" aria-labelledby="avatar-modal-label" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Choose Photo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="avatar-form" action="#" enctype="multipart/form-data" method="post">
                <div class="modal-body">
                    <div class="avatar-body row m-0">
                        <div class="col-md-8" style="padding: 0">
                            <div class="well well-sm well-table-header clearfix">
                                <div class="img-container">
                                    <img src="#" class="rounded-circle">
                                    <span id="ImageSpan" style="font-size: 12pt; font-weight: bold; ">Choose photo...</span>
                                </div>
                            </div>
                            <div class="well well-sm well-table-header clearfix">
                                <div class="col-md-12 col-sm-12" style="padding: 0">
                                    <div class="btn btn-sm btn-primary" for="inputImage" title="Upload image file">
                                        <input id="inputImage" class="" name="file" type="file" accept="image/*" data-toggle="tooltip" title="Upload image" onchange="ShowFileMsg()">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4" style="padding-right: 0">
                            <div class="well well-sm well-table-header" style="text-align:center; height:185px; width:161px;">
                                <span style="font-size: 13pt; font-weight: bold;">Preview</span>
                                <div id="dataURLView" style="margin-left: auto; margin-right: auto; width: 126px;">
                                    <img src="~/Content/Image/no-thumb.png" class="rounded-circle" style="width: 126px; height: 126px;" />
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                    <div class="well well-sm clearfix">
                        <div class="col-md-12 col-sm-12 text-right" style="padding-right: 0">
                            <button class="btn btn-danger" id="getDataURL" data-toggle="tooltip" type="button" title="Crop Image" style="pointer-events: none; opacity: .3">Crop Image</button>
                            <button class="btn btn-primary" data-dismiss="modal" type="button" id="DoneBtn">Done</button>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/cropper/cropper.min.js"></script>
    <script type="text/javascript">
        var $image = $(".img-container img"),
            $dataX = $("#dataX"),
            $dataY = $("#dataY"),
            $dataHeight = $("#dataHeight"),
            $dataWidth = $("#dataWidth"),
            options = {
                aspectRatio: 1 / 1,
                data: {
                    x: 280,
                    y: 280,
                    width: 280,
                    height: 280
                },
                preview: ".img-preview",
                done: function (data) {
                    $dataX.val(data.x);
                    $dataY.val(data.y);
                    $dataHeight.val(data.height);
                    $dataWidth.val(data.width);
                }
            };

        $image.cropper(options).on({
            "build.cropper": function (e) {
                console.log(e.type);
            },
            "built.cropper": function (e) {
                console.log(e.type);
            }
        });

        $(document).on("click", "[data-method]", function () {
            var data = $(this).data();

            if (data.method) {
                $image.cropper(data.method, data.option);
            }
        });

        var $inputImage = $("#inputImage");

        if (window.FileReader) {
            $inputImage.change(function () {
                var fileReader = new FileReader(),
                    files = this.files,
                    file;

                if (files.length) {
                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        fileReader.readAsDataURL(file);
                        fileReader.onload = function () {
                            $image.cropper("reset", true).cropper("replace", this.result);
                        };
                    }
                }
            });
        } else {
            $inputImage.addClass("hide");
        }

        var $setDataX = $("#setDataX"),
            $setDataY = $("#setDataY"),
            $setDataWidth = $("#setDataWidth"),
            $setDataHeight = $("#setDataHeight");

        var $dataURLInto = $("#dataURLInto"),
            $dataURLView = $("#dataURLView");

        $("#getDataURL").click(function () {
            $('#DoneBtn').removeClass('disabled');
            var dataURLThumb = $image.cropper("getDataURL", {
                width: 140,
                height: 140
            }, "image/jpeg", 0.8);
            var dataURLNormal = $image.cropper("getDataURL", {
                width: 480,
                height: 480
            }, "image/jpeg", 0.8);

            $(profilePhotoNormal).text(dataURLNormal);
            $(profilePhotoThumb).text(dataURLThumb);
            $(dataURLView).html('<img style="width: 100%;" class="rounded-circle" src="' + dataURLThumb + '">');
            $(imgPhotoThumb).html('<img style="width: 140px;" class="rounded-circle img-thumbnail" src="' + dataURLThumb + '">');
        });
        function ShowFileMsg() {
            if ($('#inputImage').val() == "") {
                $("#ImageSpan").text("Upload photo...");
                $('#getDataURL').css("pointer-events", "none");
                $('#getDataURL').css("opacity:", ".3");
            }
            else {
                $("#ImageSpan").text("");
                $('#getDataURL').css("pointer-events", "");
                $('#getDataURL').css("opacity", "1");
            }

            if ($('#dataURLInto').val() == "") {
                $('#ModelDone').css("pointer-events", "none");
                $('#ModelDone').css("opacity:", ".3");
            }
            else {
                $('#ModelDone').css("pointer-events", "");
                $('#ModelDone').css("opacity", "1");
            }

        }
    </script>
}

